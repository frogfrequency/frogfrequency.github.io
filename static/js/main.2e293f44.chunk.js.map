{"version":3,"sources":["components/Header/Header-components/HeaderSchemeController/HeaderSchemeController.js","components/ColorPreview/ColorPreview.js","components/Header/Header-components/HeaderMainMenuButton/HeaderMainMenuButton.js","components/Header/Header.js","projects.js","color-schemes.js","components/Pages/PageTitle.js","components/Pages/AboutPage/AboutPage.js","pictureHandler.js","pictures/chess/chess_hovered.png","pictures/chess/chess_unhovered.png","pictures/aoc/aoc_hovered.png","pictures/aoc/aoc_unhovered.png","components/Pages/ProjectsPage/ProjectCard/ProjectCard.js","components/Pages/ProjectsPage/ProjectsPage.js","components/Pages/ColorSchemePage/CustomizationPanel/CustomizationPanelElement/CustomizationPanelElement.js","components/Pages/ColorSchemePage/CustomizationPanel/CustomizationPanel.js","components/Pages/ColorSchemePage/SchemeListElement/SchemeListElement.js","components/Pages/ColorSchemePage/SchemeListContainer/SchemeListContainer.js","utility.js","components/Pages/ColorSchemePage/ColorSchemePage.js","components/Header/Header-components/HeaderPageSelect/HeaderPageSelect.js","components/Pages/ProjectDetailPage/PictureShow/PictureShow.js","components/Pages/ProjectDetailPage/ProjectDetails/ProjectDetails.js","components/Pages/ProjectDetailPage/ProjectDetailPage.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderSchemeController","colorScheme","onClickFunc","useState","skipIsHovered","changeSkipIsHovered","gearIsHovered","changeGearIsHovered","className","style","backgroundColor","color1","color","color4","onMouseEnter","onMouseLeave","marginTop","marginLeft","color3","onClick","size","to","ColorPreview","schemeId","color2","HeaderMainMenuBotton","selectorVisibility","handleSelectorVisibility","menuButtonIsHovered","changeMenuButtonIsHovered","handleMenuButtonHover","visibilityCopy","handleMenuButtonUnhover","Header","nextColorScheme","projects","title","type","description","technology","tryoutLink","sourcecodeLink","picKey","picCount","colorSchemes","PageTitle","subHeader","borderColor","AboutPage","pictureCollection","chess_hovered","chess_unhovered","aoc_hovered","aoc_unhovered","ProjectCard","project","isHovered","setIsHovered","pictureName","setPictureName","boxShadow","backgroundImage","ProjectsPage","map","textDecoration","margin","CustomizationPanelElement","text","boxColor","setShowPicker","setPickerColor","setColorBeingChanged","boxId","adjustButtonHoverStatus","setAdjustButtonHoverStatus","handleAdjustMouseEnter","handleAdjustMouseLeave","handleChangeColorButton","display","alignItems","cursor","CustomizationPanel","thisColorScheme","saveAndSetNewColorScheme","setActiveCustomizationId","hoverStatuses","setHoverStatuses","handleMouseEnter","idx","newHoverStatuses","handleMouseLeave","oldColorScheme","newColorScheme","setNewColorScheme","showPicker","pickerColor","colorBeingChanged","resetNewColorScheme","id","giveColorName","onChange","updatedColor","newColor","newColorSchemeCopy","hex","pickerColorChange","SchemeListElement","setColorScheme","deleteColorScheme","activeCustomizationId","inactive","gear","bin","updateHoverStatuses","symbol","hoverStatusesCopy","handleBinClick","alert","handleInactiveClick","SchemeListContainer","theColorSchemes","handleDefineTheColorSchemes","addButtonHoverStatus","setAddButtonHoverStatus","handleAddButtonMouseEnter","handleAddButtonMouseLeave","scheme","console","log","newScheme","element","highestId","i","length","currentId","generateNewId","theSchemes","push","addColorScheme","ColorSchemePage","HeaderPageSelect","defaultHoverStatuses","elementsAreHovered","setElementsAreHovered","handleElementMouseEnter","hoveredItem","copy","handleElementMouseLeave","handleMenuMouseEnter","handleMenuMouseLeave","includes","left","right","top","height","PictureShow","images","key","pictureAmount","outputArr","original","process","thumbnail","giveImagesArr","items","ProjectDetails","href","target","ProjectDetailPage","App","defineActiveColorScheme","document","body","defineTheColorSchemes","newColorSchemes","pageSelectorVisibility","setPageSelectorVisibility","visibility","nextId","object","giveNextSchemeId","requestedScheme","filter","path","newTheColorSchemes","sort","a","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e293f44.chunk.js","sourcesContent":["import { BsSkipEndFill } from \"react-icons/bs\";\r\nimport { BsFillGearFill } from \"react-icons/bs\";\r\nimport './HeaderSchemeController.css';\r\nimport \"../../Header.css\"\r\nimport { useState } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst HeaderSchemeController = ({ colorScheme, onClickFunc }) => {\r\n\r\n    const [skipIsHovered, changeSkipIsHovered] = useState(false);\r\n    const handleSkipHover = () => { changeSkipIsHovered(true) }\r\n    const handleSkipUnhover = () => { changeSkipIsHovered(false) }\r\n\r\n    const [gearIsHovered, changeGearIsHovered] = useState(false);\r\n    const handleGearHover = () => { changeGearIsHovered(true) }\r\n    const handleGearUnhover = () => { changeGearIsHovered(false) }\r\n\r\n    return (\r\n\r\n        <div\r\n            className='header-element'\r\n            style={{ backgroundColor: colorScheme.color1, color: colorScheme.color4 }}\r\n        // onClick={onClickFunc}\r\n        >\r\n            color schemes\r\n\r\n            <BsSkipEndFill\r\n                className={skipIsHovered ? 'pointer' : ''}\r\n                onMouseEnter={handleSkipHover}\r\n                onMouseLeave={handleSkipUnhover}\r\n                style={{ marginTop: '3px', marginLeft: '2px', color: skipIsHovered ? colorScheme.color3 : colorScheme.color4 }}\r\n                onClick={() => {\r\n                    onClickFunc();\r\n                }}\r\n                size={'1.3em'}\r\n            />\r\n            <Link to=\"/color-control\">\r\n            <BsFillGearFill\r\n                className={gearIsHovered ? 'pointer' : ''}\r\n                onMouseEnter={handleGearHover}\r\n                onMouseLeave={handleGearUnhover}\r\n                style={{ marginTop: '3px', marginLeft: '2px', color: gearIsHovered ? colorScheme.color3 : colorScheme.color4 }}\r\n\r\n                size={'0.9em'}\r\n            />\r\n            </Link>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderSchemeController\r\n","import \"./ColorPreview.css\"\r\nimport\"../Header/Header.css\"\r\n\r\nconst ColorPreview = ({colorScheme}) => {\r\n\r\n    return (\r\n        <div\r\n            className='header-element'\r\n        >\r\n            <div className='color-box' style={{ backgroundColor: colorScheme.color1 }}>{colorScheme.schemeId}</div>\r\n            <div className='color-box' style={{ backgroundColor: colorScheme.color2 }}></div>\r\n            <div className='color-box' style={{ backgroundColor: colorScheme.color3 }}></div>\r\n            <div className='color-box' style={{ backgroundColor: colorScheme.color4 }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPreview\r\n","import { useState } from \"react\";\r\nimport { IoMenu } from \"react-icons/io5\";\r\n\r\nimport \"./HeaderMainMenuButton.css\"\r\nimport \"../../Header.css\"\r\n\r\nconst HeaderMainMenuBotton = ({ colorScheme, selectorVisibility, handleSelectorVisibility }) => {\r\n\r\n\r\n    const [menuButtonIsHovered, changeMenuButtonIsHovered] = useState(false);\r\n    const handleMenuButtonHover = () => { \r\n        changeMenuButtonIsHovered(true);\r\n        let visibilityCopy = [...selectorVisibility];\r\n        visibilityCopy[0] = true;\r\n        handleSelectorVisibility(visibilityCopy);\r\n    };\r\n\r\n\r\n    const handleMenuButtonUnhover = () => {\r\n        changeMenuButtonIsHovered(false);\r\n        let visibilityCopy = [...selectorVisibility];\r\n        visibilityCopy[0] = false;\r\n        handleSelectorVisibility(visibilityCopy);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {menuButtonIsHovered ? (\r\n                    <div\r\n                        className=\"header-element pointer\"\r\n                        style={{ backgroundColor: colorScheme.color1, color: colorScheme.color3 }}\r\n                        onMouseEnter={() => handleMenuButtonHover()}\r\n                        onMouseLeave={() => handleMenuButtonUnhover()}\r\n                    >\r\n                        menu\r\n                        <IoMenu className=\"main-menu-button\"/>\r\n                    </div>\r\n            ) : (\r\n                    <div\r\n                        className=\"header-element\"\r\n                        style={{ backgroundColor: colorScheme.color1, color: colorScheme.color4 }}\r\n                        onMouseEnter={() => handleMenuButtonHover()}\r\n                        onMouseLeave={() => handleMenuButtonUnhover()}\r\n                    >\r\n                        menu\r\n                        <IoMenu className=\"main-menu-button\"/>\r\n                    </div>\r\n            )\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderMainMenuBotton\r\n","\r\nimport './Header.css';\r\nimport HeaderSchemeController from './Header-components/HeaderSchemeController/HeaderSchemeController';\r\nimport ColorPreview from '../ColorPreview/ColorPreview';\r\nimport HeaderMainMenuButton from './Header-components/HeaderMainMenuButton/HeaderMainMenuButton';\r\n\r\n\r\nconst Header = ({colorScheme, nextColorScheme, selectorVisibility, handleSelectorVisibility}) => {\r\n    \r\n    return (\r\n        <div\r\n            className='header'\r\n            style={{\r\n                backgroundColor: colorScheme.color1, color: colorScheme.color2}}\r\n        >\r\n            <ColorPreview colorScheme={colorScheme} className=\"header-element\"/>\r\n            <HeaderMainMenuButton\r\n                colorScheme={colorScheme}\r\n                selectorVisibility={selectorVisibility}\r\n                handleSelectorVisibility={handleSelectorVisibility}\r\n            />\r\n            <HeaderSchemeController\r\n                colorScheme={colorScheme}\r\n                onClickFunc={nextColorScheme}\r\n            />\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","export const projects = [\r\n    {\r\n        title: 'chess',\r\n        type: 'game',\r\n        description: 'a virtual chess game coded from scratch.',\r\n        technology: ['Javascript, HTML, CSS'],\r\n        tryoutLink: 'https://frogfrequency.github.io/JS-Mini-Projects/simulators/chess/chess_v1_redesign/',\r\n        sourcecodeLink: '',\r\n        picKey: 'chess',\r\n        picCount: 3\r\n    },\r\n    {\r\n        title: 'graph guesser',\r\n        type: 'game',\r\n        description: 'a primitive game where you have to guess two variables so that a linear function with those two variables slices two previously shown rectangles',\r\n        technology: ['Javascript, HTML, CSS'],\r\n        tryoutLink: 'https://frogfrequency.github.io/JS-Mini-Projects/waves-and-graphs/graphGuesser_V1/',\r\n        sourcecodeLink: '',\r\n        picKey: 'graphGuesser',\r\n        picCount: 1\r\n    },\r\n    {\r\n        title: 'advent of code 2020',\r\n        type: 'series of coding challenges',\r\n        description: '25 coding challenges with two riddles each where the second one builds upon the first but is more difficult',\r\n        technology: ['Javascript'],\r\n        tryoutLink: 'https://frogfrequency.github.io/JS-Mini-Projects',\r\n        sourcecodeLink: '',\r\n        picKey: 'aoc',\r\n        picCount: 2\r\n    },\r\n    {\r\n        title: 'some project',\r\n        type: 'not really a project',\r\n        description: 'Ullamco fugiat laboris nisi ipsum amet exercitation sint veniam eu do esse ipsum do est.',\r\n        technology: ['imagination'],\r\n        tryoutLink: 'https://frogfrequency.github.io/JS-Mini-Projects',\r\n        sourcecodeLink: '',\r\n        picKey: 'chess',\r\n        picCount: 1\r\n    },\r\n    {\r\n        title: 'some other project',\r\n        type: 'not really a project',\r\n        description: 'Ullamco fugiat laboris nisi. i am a bit shorter.',\r\n        technology: ['imagination', 'more imagination'],\r\n        tryoutLink: 'https://frogfrequency.github.io/JS-Mini-Projects',\r\n        sourcecodeLink: '',\r\n        picKey: 'chess',\r\n        picCount: 1\r\n    },\r\n    {\r\n        title: 'and yet another project',\r\n        type: 'not really a project',\r\n        description: 'still Ullamco fugiat laboris nisi ipsum amet asdfasd sa df sadf assd fasd fas df sdf as df sadf asdff asdfasdfasdf asdfdassdf asdf assdf asdf sadfa sdfasdffsadffassdf exercitation sint veniam eu do esse ipsum do est. i am a bit longer',\r\n        technology: ['imagination'],\r\n        tryoutLink: 'https://frogfrequency.github.io/JS-Mini-Projects',\r\n        sourcecodeLink: '',\r\n        picKey: 'chess',\r\n        picCount: 1\r\n    }\r\n]","export let colorSchemes = [\r\n    {\r\n        schemeId: 0,\r\n        color1: 'rgb(41, 59, 95)',\r\n        color2: 'rgb(71, 89, 126)',\r\n        color3: 'rgb(178, 171, 140)',\r\n        color4: 'rgb(219, 230, 253)'\r\n    },\r\n    {\r\n        schemeId: 1,\r\n        color1: 'rgb(170, 43, 29)',\r\n        color2: 'rgb(204, 86, 30)',\r\n        color3: 'rgb(239, 141, 50)',\r\n        color4: 'rgb(190, 202, 92)'\r\n    },\r\n    {\r\n        schemeId: 2,\r\n        color1: 'rgb(133, 96, 63)',\r\n        color2: 'rgb(158, 117, 64)',\r\n        color3: 'rgb(189, 147, 84)',\r\n        color4: 'rgb(227, 209, 138)'\r\n    },\r\n    {\r\n        schemeId: 3,\r\n        color1: 'rgb(9, 10, 37)',\r\n        color2: 'rgb(29, 57, 132)',\r\n        color3: 'rgb(228, 166, 207)',\r\n        color4: 'rgb(193, 210, 255)'\r\n    }\r\n]\r\n\r\n\r\nexport function giveNextSchemeId(object, currentId) {\r\n    let i=0;\r\n    while (object[i].schemeId !== currentId) { // != changed to !==\r\n        i=(i+1)%object.length\r\n    }\r\n    return object[(i+1)%object.length].schemeId\r\n}\r\n\r\n// export function defineNewColorSchemes(newSchemes) {\r\n//     colorSchemes = newSchemes;\r\n// }","import \"./PageTitle.css\"\r\n\r\nconst PageTitle = ({colorScheme, title, subHeader}) => {\r\n    return (\r\n        <div>\r\n            <h3\r\n                className=\"main-title\"\r\n                style={{borderColor:colorScheme.color2}}\r\n            >\r\n                {title}\r\n            </h3>\r\n\r\n            <h4\r\n                className=\"sub-header\"\r\n                style={{color: colorScheme.color3}}\r\n            >\r\n               - {subHeader} -\r\n            </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageTitle\r\n","import \"../../Pages/Page.css\"\r\nimport \"./AboutPage.css\"\r\nimport PageTitle from \"../PageTitle\"\r\n\r\n\r\nconst AboutPage = ({ colorScheme, title, subHeader }) => {\r\n    return (\r\n        <div className='page text'>\r\n            <PageTitle\r\n                colorScheme={colorScheme}\r\n                title={title}\r\n                subHeader={subHeader}\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n            COPY TEXT FROM SRC/About.js IN HERE??? \r\n            <br></br>\r\n            <br></br>\r\n            \r\n            Officia consectetur incididunt ullamco culpa esse deserunt dolor qui veniam ullamco esse consequat. Exercitation consectetur ad velit nostrud deserunt exercitation magna consectetur sit mollit ullamco. Est qui occaecat officia elit aute non excepteur ad adipisicing velit quis ad. Nostrud fugiat reprehenderit velit nostrud esse laboris.\r\n\r\n            Consectetur reprehenderit amet laborum eu incididunt et consectetur. Eiusmod Lorem laborum qui elit est. Est qui non labore veniam laborum mollit. Eu irure aliqua proident velit consequat nostrud anim enim dolor ad duis ea velit ad. Fugiat enim consectetur duis et fugiat Lorem velit eiusmod commodo cupidatat nostrud aliquip adipisicing irure.\r\n\r\n            Cillum sint voluptate sint do est anim. Veniam dolor ad laborum proident anim. Culpa laborum id voluptate cillum mollit do sint consequat. Quis eiusmod fugiat nostrud qui laborum nulla ea sunt sint. Adipisicing sint aute Lorem eiusmod eiusmod Lorem enim quis fugiat nostrud.\r\n\r\n            Id ad laborum aute elit cillum velit non tempor nulla elit labore. In consequat culpa in magna irure consectetur mollit. Lorem eu magna ex eiusmod eu irure excepteur adipisicing cupidatat fugiat eiusmod sint. Anim velit nulla sint ipsum minim exercitation deserunt eiusmod cupidatat minim. Officia irure Lorem adipisicing sunt duis proident eu sit do adipisicing ipsum et.\r\n\r\n            Minim sunt pariatur ad cupidatat ex enim non et tempor commodo ea qui. Ad aliqua quis elit irure id dolor incididunt anim cupidatat. Fugiat do ullamco duis commodo enim est. Adipisicing in et eiusmod sit sit aliqua irure occaecat aliquip minim. Incididunt ullamco voluptate aliquip labore proident velit. Cillum sit ut anim quis excepteur eiusmod in irure aute cupidatat dolore et.\r\n\r\n            Cillum do fugiat et Lorem fugiat proident elit. Et consequat non sint et cillum id Lorem magna enim nulla adipisicing. Qui id labore mollit consequat est sint pariatur non exercitation laborum velit dolor ea. Nisi sit adipisicing sit veniam pariatur velit. Exercitation reprehenderit irure nostrud officia tempor nostrud adipisicing ipsum dolor reprehenderit reprehenderit enim. Velit consectetur non excepteur do enim occaecat culpa nulla nulla eu enim exercitation sint excepteur. Sit elit aute fugiat voluptate ad.\r\n\r\n            Eiusmod anim do esse amet. Lorem nostrud dolore sit veniam nulla eiusmod occaecat minim dolor reprehenderit excepteur veniam elit adipisicing. Est culpa occaecat veniam ut mollit culpa labore amet excepteur occaecat ullamco anim sit. Commodo magna eu velit id sunt tempor officia nostrud velit non do officia qui. Reprehenderit deserunt laboris mollit ad eiusmod. Quis eu nisi ea fugiat eiusmod ullamco mollit. Cupidatat velit culpa tempor incididunt enim dolor aliquip esse irure quis ullamco Lorem voluptate.\r\n\r\n            Cupidatat nostrud enim cupidatat occaecat pariatur laboris adipisicing consectetur eu enim ea. Incididunt laborum sit nulla et consectetur mollit velit qui. Aute proident do reprehenderit magna.\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage","import chess_hovered from \"./pictures/chess/chess_hovered.png\"\r\nimport chess_unhovered from \"./pictures/chess/chess_unhovered.png\"\r\nimport aoc_hovered from \"./pictures/aoc/aoc_hovered.png\"\r\nimport aoc_unhovered from \"./pictures/aoc/aoc_unhovered.png\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const pictureCollection = {\r\n    chess_hovered: chess_hovered,\r\n    chess_unhovered: chess_unhovered,\r\n    aoc_hovered: aoc_hovered,\r\n    aoc_unhovered: aoc_unhovered,\r\n}","export default __webpack_public_path__ + \"static/media/chess_hovered.9731d7ff.png\";","export default __webpack_public_path__ + \"static/media/chess_unhovered.347e524e.png\";","export default __webpack_public_path__ + \"static/media/aoc_hovered.3952244c.png\";","export default __webpack_public_path__ + \"static/media/aoc_unhovered.21b8b77a.png\";","import \"../ProjectsPage.css\"\r\nimport { useState } from 'react';\r\nimport chess_hovered from \"../../../../pictures/chess/chess_hovered.png\"\r\n\r\nimport { pictureCollection } from \"../../../../pictureHandler.js\";\r\n\r\n\r\nconst ProjectCard = ({ project, colorScheme }) => {\r\n\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [pictureName, setPictureName] = useState(`${project.picKey}_unhovered`);\r\n\r\n    const handleHover = (newColorSchemes) => {\r\n        setIsHovered(true);\r\n        setPictureName(`${project.picKey}_hovered`);\r\n    }\r\n\r\n    const handleUnhover = (newColorSchemes) => {\r\n        setIsHovered(false);\r\n        setPictureName(`${project.picKey}_unhovered`);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"project-card\"\r\n            style={\r\n                {\r\n                    backgroundColor: colorScheme.color2,\r\n                    boxShadow: isHovered ? '10px 10px 10px rgb(15, 15, 15)' : '5px 5px 10px rgb(15, 15, 15)'\r\n                }\r\n            }\r\n            onMouseEnter={() => handleHover()}\r\n            onMouseLeave={() => handleUnhover()}\r\n        >\r\n            <div\r\n                className={isHovered ? 'card-image-hovered' : 'card-image-unhovered'}\r\n                style={\r\n                    {\r\n                        // backgroundImage: `url(\"${process.env.PUBLIC_URL}/pictures/${project.picKey}/${project.picKey}_${isHovered ? '' : 'un'}hovered.png\")`,\r\n                        backgroundImage: `url(${pictureCollection[pictureName]})`\r\n                    }\r\n                }\r\n            />\r\n\r\n            {/* <img src={pictureCollection[pictureName]}></img> */}\r\n\r\n            <h3 className='project-card-title'>{project.title}</h3>\r\n            <div className='project-card-description'>\r\n                {project.type}\r\n            </div>\r\n            <div className='project-card-description'>\r\n                {project.technology}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectCard\r\n","import \"../../Pages/Page.css\";\r\nimport PageTitle from \"../PageTitle\";\r\nimport ProjectCard from \"./ProjectCard/ProjectCard\";\r\nimport { projects } from \"../../../projects\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst ProjectsPage = ({ colorScheme, title, subHeader }) => {\r\n    return (\r\n        <div className='page'>\r\n            <PageTitle\r\n                colorScheme={colorScheme}\r\n                title={title}\r\n                subHeader={subHeader}\r\n            />\r\n            \r\n            <div className='projects-container'>\r\n                {projects.map((project) => (\r\n                    <Link\r\n                        to={`/${project.title}`}\r\n                        key={project.title}\r\n                        style={\r\n                            {\r\n                                color: colorScheme.color4,\r\n                                textDecoration: 'none',\r\n                                margin: '20px'\r\n                            }\r\n                        }>\r\n                        <ProjectCard project={project} colorScheme={colorScheme}/>\r\n                    </Link>\r\n                ))}\r\n                \r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectsPage","import \"../../ColorSchemePage.css\"\r\nimport \"../../../../ColorPreview/ColorPreview.css\"\r\nimport { HiAdjustments } from \"react-icons/hi\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst CustomizationPanelElement = ({text, boxColor, colorScheme, setShowPicker, setPickerColor, setColorBeingChanged, boxId}) => {\r\n    \r\n    const [adjustButtonHoverStatus, setAdjustButtonHoverStatus] = useState(false);\r\n\r\n    const handleAdjustMouseEnter = () => {\r\n        setAdjustButtonHoverStatus(true)\r\n    }\r\n    \r\n    const handleAdjustMouseLeave = () => {\r\n        setAdjustButtonHoverStatus(false)\r\n    }\r\n\r\n\r\n    const handleChangeColorButton = (boxColor) => {\r\n        setPickerColor(boxColor);\r\n        setShowPicker(true);\r\n        setColorBeingChanged(boxId);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n            <div className='customization-panel-content-element'>\r\n                    {text} \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <div className='color-box'\r\n                            style={{ backgroundColor: boxColor, cursor: 'pointer'} }\r\n                            onClick={() => handleChangeColorButton(boxColor)}\r\n                        />\r\n                        &nbsp;&nbsp;\r\n                        \r\n                        \r\n                        {adjustButtonHoverStatus ? (\r\n                            <HiAdjustments\r\n                                onMouseEnter={handleAdjustMouseEnter}\r\n                                onMouseLeave={handleAdjustMouseLeave}\r\n                                style={{color: colorScheme.color3, cursor:'pointer'}}\r\n                                onClick={() => handleChangeColorButton(boxColor)}\r\n                            />\r\n                        ) : (\r\n                            <HiAdjustments\r\n                                onMouseEnter={handleAdjustMouseEnter}\r\n                                onMouseLeave={handleAdjustMouseLeave}\r\n                            />\r\n                        )\r\n                        }\r\n                        \r\n\r\n\r\n                        \r\n                    </div>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default CustomizationPanelElement\r\n","import \"./CustomizationPanel.css\"\r\nimport \"../ColorSchemePage.css\"\r\nimport \"../../../ColorPreview/ColorPreview.css\"\r\nimport { SketchPicker } from 'react-color';\r\nimport { RiSave3Fill } from \"react-icons/ri\";\r\nimport { FaUndo } from \"react-icons/fa\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { useState } from \"react\";\r\nimport ColorPreview from '../../../ColorPreview/ColorPreview';\r\nimport CustomizationPanelElement from \"./CustomizationPanelElement/CustomizationPanelElement\";\r\n\r\nconst CustomizationPanel = ({thisColorScheme, colorScheme, saveAndSetNewColorScheme, setActiveCustomizationId}) => {\r\n\r\n    const [hoverStatuses, setHoverStatuses] = useState([false, false, false]);\r\n\r\n    const handleMouseEnter = (idx) => {\r\n        let newHoverStatuses = [...hoverStatuses];\r\n        newHoverStatuses[idx] = true;\r\n        setHoverStatuses(newHoverStatuses);\r\n        // maybe add functionality for tooltip here\r\n    }\r\n\r\n    const handleMouseLeave = (idx) => {\r\n        let newHoverStatuses = [...hoverStatuses];\r\n        newHoverStatuses[idx] = false;\r\n        setHoverStatuses(newHoverStatuses);\r\n        // maybe add functionality for tooltip here\r\n    }\r\n\r\n\r\n    const oldColorScheme = {...thisColorScheme};\r\n    const [newColorScheme, setNewColorScheme] = useState(thisColorScheme);\r\n    const [showPicker, setShowPicker] = useState(false);\r\n    const [pickerColor, setPickerColor] = useState('#fff');\r\n    const [colorBeingChanged, setColorBeingChanged] = useState(null);\r\n\r\n\r\n    const pickerColorChange = (newColor) => {\r\n        setPickerColor(newColor);\r\n        let newColorSchemeCopy = { ...newColorScheme };\r\n        let objectColorKey = 'color' + colorBeingChanged\r\n        newColorSchemeCopy[objectColorKey] = newColor.hex;\r\n        setNewColorScheme(newColorSchemeCopy);\r\n    }\r\n\r\n\r\n    const resetNewColorScheme = () => {\r\n        setNewColorScheme(oldColorScheme);\r\n    }\r\n\r\n\r\n    function giveColorName(idx) {\r\n        switch (idx) {\r\n            case 1:\r\n                return 'background color'\r\n            case 2:\r\n                return 'background styling color'\r\n            case 3:\r\n                return 'text styling color'\r\n            case 4:\r\n                return 'text color'\r\n            default:\r\n                return 'error in giveColorName'\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            id='customization-panel'\r\n            style={{ backgroundColor: colorScheme.color2, borderColor: colorScheme.color1 }}\r\n        >\r\n\r\n\r\n                {hoverStatuses[2] ? (\r\n                    <MdClose\r\n                    size='1.3em'\r\n                    id='closeX'\r\n                    style={{color: colorScheme.color3}}\r\n                    onClick={() => setActiveCustomizationId(null)}\r\n                    onMouseEnter={() => handleMouseEnter(2)}\r\n                    onMouseLeave={() => handleMouseLeave(2)}\r\n                />\r\n                ) : (\r\n                    <MdClose\r\n                    size='1.3em'\r\n                    id='closeX'\r\n                    style={{color: colorScheme.color4}}\r\n                    onClick={() => setActiveCustomizationId(null)}\r\n                    onMouseEnter={() => handleMouseEnter(2)}\r\n                    onMouseLeave={() => handleMouseLeave(2)}\r\n                />\r\n                )}\r\n\r\n                \r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n            <div id='customization-panel-header' style={{ borderColor: colorScheme.color3 }}>\r\n                <div>adjust colors for: </div>\r\n\r\n                <ColorPreview\r\n                    colorScheme={thisColorScheme}\r\n                />\r\n            </div>\r\n\r\n            <div id='customization-panel-content'>\r\n                <CustomizationPanelElement\r\n                    // thisColorScheme={thisColorScheme}\r\n                    text={'background color'}\r\n                    boxColor={newColorScheme.color1}\r\n                    colorScheme={colorScheme}\r\n                    setShowPicker={setShowPicker}\r\n                    setPickerColor={setPickerColor}\r\n                    setColorBeingChanged={setColorBeingChanged}\r\n                    boxId={1}\r\n                />\r\n                <CustomizationPanelElement\r\n                    // thisColorScheme={thisColorScheme}\r\n                    text={'background styling color'}\r\n                    boxColor={newColorScheme.color2}\r\n                    colorScheme={colorScheme}\r\n                    setShowPicker={setShowPicker}\r\n                    setPickerColor={setPickerColor}\r\n                    setColorBeingChanged={setColorBeingChanged}\r\n                    boxId={2}\r\n                />\r\n                <CustomizationPanelElement\r\n                    // thisColorScheme={thisColorScheme}\r\n                    text={'text styling color'}\r\n                    boxColor={newColorScheme.color3}\r\n                    colorScheme={colorScheme}\r\n                    setShowPicker={setShowPicker}\r\n                    setPickerColor={setPickerColor}\r\n                    setColorBeingChanged={setColorBeingChanged}\r\n                    boxId={3}\r\n                />\r\n                <CustomizationPanelElement\r\n                    // thisColorScheme={thisColorScheme}\r\n                    text={'text color'}\r\n                    boxColor={newColorScheme.color4}\r\n                    colorScheme={colorScheme}\r\n                    setShowPicker={setShowPicker}\r\n                    setPickerColor={setPickerColor}\r\n                    setColorBeingChanged={setColorBeingChanged}\r\n                    boxId={4}\r\n                />\r\n            </div>\r\n\r\n            <div className='customization-panel-action-bar'>\r\n                {hoverStatuses[0] ? (\r\n                    <RiSave3Fill\r\n                        size='1.3em'\r\n                        style={{color: colorScheme.color3}}\r\n                        onMouseEnter={() => handleMouseEnter(0)}\r\n                        onMouseLeave={() => handleMouseLeave(0)}\r\n                        onClick={() => saveAndSetNewColorScheme(newColorScheme)}\r\n                    />\r\n                ): (\r\n                    <RiSave3Fill\r\n                        size='1.3em'\r\n                        onMouseEnter={() => handleMouseEnter(0)}\r\n                        onMouseLeave={() => handleMouseLeave(0)}\r\n                        onClick={() => saveAndSetNewColorScheme(newColorScheme)}\r\n                    />\r\n                )\r\n                }\r\n\r\n\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n\r\n                {hoverStatuses[1] ? (\r\n                    <FaUndo\r\n                        style={{color: colorScheme.color3}}\r\n                        onMouseEnter={() => handleMouseEnter(1)}\r\n                        onMouseLeave={() => handleMouseLeave(1)}\r\n                        onClick={resetNewColorScheme}\r\n                    />\r\n                ): (\r\n                    <FaUndo\r\n                        onMouseEnter={() => handleMouseEnter(1)}\r\n                        onMouseLeave={() => handleMouseLeave(1)}\r\n                        onClick={resetNewColorScheme}\r\n                    />\r\n                )\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n            {showPicker ? (\r\n                <>\r\n                    <br></br>\r\n                    pick new {giveColorName(colorBeingChanged)}\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n                    <SketchPicker\r\n                        color={pickerColor}\r\n                        onChange={updatedColor => pickerColorChange(updatedColor)}\r\n                    />\r\n                </>\r\n\r\n            ) : (\r\n                null\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomizationPanel\r\n","import { useState } from \"react\";\r\nimport \"./SchemeListElement.css\"\r\nimport { BsFillGearFill } from \"react-icons/bs\";\r\nimport { FaCircle, FaRegCircle } from \"react-icons/fa\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport \"../CustomizationPanel/CustomizationPanel.css\"\r\nimport CustomizationPanel from \"../CustomizationPanel/CustomizationPanel\";\r\n// import { CustomizationPanel } from \"../CustomizationPanel/CustomizationPanel\"\r\n\r\n\r\n\r\nconst SchemeListElement = ({ thisColorScheme, colorScheme, setColorScheme, deleteColorScheme, activeCustomizationId, setActiveCustomizationId, saveAndSetNewColorScheme }) => {\r\n\r\n    const [hoverStatuses, updateHoverStatuses] = useState({ inactive: false, gear: false, bin: false });\r\n\r\n    const handleMouseEnter = (symbol) => {\r\n        let hoverStatusesCopy = { ...hoverStatuses };\r\n        hoverStatusesCopy[symbol] = true;\r\n        updateHoverStatuses(hoverStatusesCopy);\r\n    }\r\n    const handleMouseLeave = (symbol) => {\r\n        let hoverStatusesCopy = { ...hoverStatuses };\r\n        hoverStatusesCopy[symbol] = false;\r\n        updateHoverStatuses(hoverStatusesCopy);\r\n    }\r\n\r\n    const handleBinClick = (id) => {\r\n        if (id !== colorScheme.schemeId) {\r\n            deleteColorScheme(id);\r\n        }\r\n        else {\r\n            alert(\"Sry you cannot delete a scheme that is currently active\");\r\n        }\r\n    }\r\n\r\n    const handleInactiveClick = (id) => {\r\n        handleMouseLeave('inactive');\r\n        setColorScheme(id)\r\n    }\r\n\r\n    const handleGearClick = (id) => {\r\n        setActiveCustomizationId(id);\r\n    }\r\n\r\n    // ------------- END OF STATE ------------\r\n\r\n    return (\r\n        <div className='page-box-container'>\r\n            <div className='page-color-box' style={{ backgroundColor: thisColorScheme.color1, color: thisColorScheme.color4 }}>{thisColorScheme.schemeId}</div>\r\n            <div className='page-color-box' style={{ backgroundColor: thisColorScheme.color2 }}></div>\r\n            <div className='page-color-box' style={{ backgroundColor: thisColorScheme.color3 }}></div>\r\n            <div className='page-color-box' style={{ backgroundColor: thisColorScheme.color4 }}></div>\r\n            &nbsp;\r\n\r\n\r\n            {thisColorScheme.schemeId === colorScheme.schemeId ? (\r\n                <FaCircle\r\n                    className='color-container-symbol'\r\n                    style={{ color: colorScheme.color4 }}\r\n                />\r\n            ) : (\r\n                <>\r\n                {hoverStatuses.inactive ? (\r\n                    <FaRegCircle\r\n                        className='color-container-symbol pointer'\r\n                        style={{ color: colorScheme.color3 }}\r\n                        onMouseEnter={() => handleMouseEnter('inactive')}\r\n                        onMouseLeave={() => handleMouseLeave('inactive')}\r\n                        onClick={() => handleInactiveClick(thisColorScheme.schemeId)}\r\n                    />\r\n                ) : (\r\n                    <FaRegCircle\r\n                        className='color-container-symbol'\r\n                        style={{ color: colorScheme.color4 }}\r\n                        onMouseEnter={() => handleMouseEnter('inactive')}\r\n                        onMouseLeave={() => handleMouseLeave('inactive')}\r\n                        onClick={() => handleInactiveClick(thisColorScheme.schemeId)}\r\n                    />\r\n                )\r\n                }\r\n\r\n                </>\r\n            )\r\n            }\r\n\r\n            {hoverStatuses.gear ? (\r\n                <BsFillGearFill\r\n                    className='color-container-symbol pointer'\r\n                    style={{ color: colorScheme.color3 }}\r\n                    onMouseEnter={() => handleMouseEnter('gear')}\r\n                    onMouseLeave={() => handleMouseLeave('gear')}\r\n                    onClick={() => handleGearClick(thisColorScheme.schemeId)}\r\n                />\r\n            ): (\r\n                <BsFillGearFill\r\n                    className='color-container-symbol'\r\n                    style={{ color: colorScheme.color4 }}\r\n                    onMouseEnter={() => handleMouseEnter('gear')}\r\n                    onMouseLeave={() => handleMouseLeave('gear')}\r\n                    // onClick={() => handleGearClick} // this is theoretically not needed since it cant be clicked without being hovered\r\n                />\r\n            )\r\n            }\r\n\r\n            {hoverStatuses.bin ? (\r\n                <MdDelete\r\n                    className='color-container-symbol pointer'\r\n                    style={{ color: colorScheme.color3 }}\r\n                    onMouseEnter={() => handleMouseEnter('bin')}\r\n                    onMouseLeave={() => handleMouseLeave('bin')}\r\n                    onClick={() => handleBinClick(thisColorScheme.schemeId)}\r\n                    size={'1.15em'}\r\n                />\r\n            ): (\r\n                <MdDelete\r\n                    className='color-container-symbol'\r\n                    style={{ color: colorScheme.color4 }}\r\n                    onMouseEnter={() => handleMouseEnter('bin')}\r\n                    onMouseLeave={() => handleMouseLeave('bin')}\r\n                    onClick={() => handleBinClick(thisColorScheme.schemeId)}\r\n                    size={'1.15em'}\r\n                />\r\n            )\r\n            }\r\n        {activeCustomizationId === thisColorScheme.schemeId ? (\r\n            \r\n            <CustomizationPanel\r\n                thisColorScheme={thisColorScheme}\r\n                colorScheme={colorScheme}\r\n                saveAndSetNewColorScheme={saveAndSetNewColorScheme}\r\n                setActiveCustomizationId={setActiveCustomizationId}\r\n            />\r\n        ) : (\r\n            null\r\n        )\r\n        }\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SchemeListElement\r\n","import SchemeListElement from \"../SchemeListElement/SchemeListElement\"\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport \"./SchemeListContainer.css\";\r\nimport \"../../../../App.css\"\r\nimport \"../ColorSchemePage.css\"\r\nimport { useState } from 'react';\r\nimport { generateNewId } from \"../../../../utility\"\r\n\r\nconst SchemeListContainer = ({colorScheme, setColorScheme, theColorSchemes, deleteColorScheme, handleDefineTheColorSchemes, saveAndSetNewColorScheme}) => {\r\n    \r\n    const [addButtonHoverStatus, setAddButtonHoverStatus] = useState(\r\n        false\r\n    )\r\n    const handleAddButtonMouseEnter = () => {\r\n        setAddButtonHoverStatus(true);\r\n    }\r\n    const handleAddButtonMouseLeave = () => {\r\n        setAddButtonHoverStatus(false);\r\n    }\r\n    \r\n    const [activeCustomizationId, setActiveCustomizationId] = useState(null);\r\n\r\n\r\n\r\n    const addColorScheme = () => {\r\n        console.log('addColorScheme called');\r\n        let newId = generateNewId(theColorSchemes);\r\n        let newScheme = {\r\n            schemeId: newId,\r\n            color1: 'rgb(10, 10, 10)',\r\n            color2: 'rgb(40, 40, 40)',\r\n            color3: 'rgb(170, 170, 170)',\r\n            color4: 'rgb(220, 220, 220)'\r\n        }\r\n\r\n        let theSchemes = [...theColorSchemes]\r\n        theSchemes.push(newScheme);\r\n     \r\n        handleDefineTheColorSchemes(theSchemes);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div>\r\n\r\n\r\n            {theColorSchemes.map((scheme) => (\r\n                        \r\n                            <SchemeListElement\r\n                                key={scheme.schemeId}\r\n                                thisColorScheme={scheme}\r\n                                colorScheme={colorScheme}\r\n                                setColorScheme={setColorScheme}\r\n                                deleteColorScheme={deleteColorScheme}\r\n                                activeCustomizationId={activeCustomizationId}\r\n                                setActiveCustomizationId={setActiveCustomizationId}\r\n                                saveAndSetNewColorScheme={saveAndSetNewColorScheme}\r\n                            ></SchemeListElement>\r\n                        \r\n                    ))}\r\n\r\n            {addButtonHoverStatus ? (\r\n    \r\n                <div\r\n                    className='addSchemeButton pointer'\r\n                    onMouseEnter={handleAddButtonMouseEnter}\r\n                    onMouseLeave={handleAddButtonMouseLeave}\r\n                    style={{color: colorScheme.color3}}\r\n                    onClick={() => addColorScheme()}\r\n                >\r\n                    add new scheme\r\n                    <GoPlus id='addSchemePlusSign' size={'1.1em'}/>\r\n                </div>\r\n\r\n            ) : (\r\n\r\n                <div\r\n                    className='addSchemeButton'\r\n                    onMouseEnter={handleAddButtonMouseEnter}\r\n                    onMouseLeave={handleAddButtonMouseLeave}\r\n                    // onMouseClick={}\r\n                >\r\n                    add new scheme\r\n                    <GoPlus id='addSchemePlusSign' size={'1.1em'}/>\r\n                </div>\r\n\r\n            )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SchemeListContainer\r\n"," export function generateNewId(element) {\r\n    let highestId = 0;\r\n    for(let i=0; i<element.length; i++) {\r\n        let currentId = element[i].schemeId;\r\n        if (highestId < currentId) {\r\n            highestId = currentId;\r\n        }\r\n    }\r\n    return highestId+1;\r\n}","import PageTitle from \"../PageTitle\"\r\nimport SchemeListContainer from \"./SchemeListContainer/SchemeListContainer\"\r\nimport \"./ColorSchemePage.css\"\r\n\r\nconst ColorSchemePage = ({ colorScheme, title, subHeader, setColorScheme, theColorSchemes, deleteColorScheme, handleDefineTheColorSchemes, saveAndSetNewColorScheme }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <PageTitle\r\n                colorScheme={colorScheme}\r\n                title={title}\r\n                subHeader={subHeader}\r\n            />\r\n            <div id=\"color-control\">\r\n                <SchemeListContainer\r\n                    colorScheme={colorScheme}\r\n                    setColorScheme={setColorScheme}\r\n                    theColorSchemes={theColorSchemes}\r\n                    deleteColorScheme={deleteColorScheme}\r\n                    handleDefineTheColorSchemes={handleDefineTheColorSchemes}\r\n                    saveAndSetNewColorScheme={saveAndSetNewColorScheme}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorSchemePage\r\n","import \"./HeaderPageSelect.css\"\r\nimport { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderPageSelect = ({ colorScheme, selectorVisibility, handleSelectorVisibility }) => {\r\n\r\n    const defaultHoverStatuses = { ProjectsPage: false, ColorSchemePage: false, AboutPage: false };\r\n\r\n    const [elementsAreHovered, setElementsAreHovered] = useState(\r\n        defaultHoverStatuses\r\n    );\r\n\r\n    const handleElementMouseEnter = (hoveredItem) => {\r\n        let copy = { ...defaultHoverStatuses }\r\n        copy[hoveredItem] = true;\r\n        setElementsAreHovered(copy);\r\n    }\r\n    const handleElementMouseLeave = () => {\r\n        setElementsAreHovered(defaultHoverStatuses)\r\n    }\r\n\r\n\r\n    const handleMenuMouseEnter = () => {\r\n        let visibilityCopy = [...selectorVisibility];\r\n        visibilityCopy[0] = true;\r\n        handleSelectorVisibility(visibilityCopy);\r\n    }\r\n\r\n    const handleMenuMouseLeave = () => {\r\n        let visibilityCopy = [...selectorVisibility];\r\n        visibilityCopy[0] = false;\r\n        handleSelectorVisibility(visibilityCopy);\r\n    }\r\n\r\n\r\n    // end of state -----------------------------\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {selectorVisibility.includes(true) ? (\r\n                <>\r\n                    <div\r\n                        className=\"empty-box\"\r\n                        onMouseEnter={() => handleMenuMouseEnter()}\r\n                        onMouseLeave={() => handleMenuMouseLeave()}\r\n                        style={{ left: '192px' }}\r\n                    ></div>\r\n                    <div\r\n                        className=\"empty-box\"\r\n                        onMouseEnter={() => handleMenuMouseEnter()}\r\n                        onMouseLeave={() => handleMenuMouseLeave()}\r\n                        style={{ right: '192px' }}\r\n                    ></div>\r\n\r\n                    <div\r\n                        className=\"empty-box\"\r\n                        onMouseEnter={() => handleMenuMouseEnter()}\r\n                        onMouseLeave={() => handleMenuMouseLeave()}\r\n                        style={{ top: '46px', height: '50px' }}\r\n                    ></div>\r\n                </>\r\n\r\n            ) :\r\n                null\r\n            }\r\n\r\n\r\n            {selectorVisibility.includes(true) ? (\r\n                <div\r\n                    className='page-selector'\r\n                    style={{ backgroundColor: colorScheme.color1, color: colorScheme.color4, borderColor: colorScheme.color2 }}\r\n                    onMouseEnter={() => handleMenuMouseEnter()}\r\n                    onMouseLeave={() => handleMenuMouseLeave()}\r\n                >\r\n                    <div\r\n                        className={elementsAreHovered.ProjectsPage ? 'selector-element pointer' : 'selector-element'}\r\n                        onMouseEnter={() => handleElementMouseEnter('ProjectsPage')}\r\n                        onMouseLeave={() => handleElementMouseLeave()}\r\n                    >\r\n                        <Link\r\n                            style={\r\n                                {\r\n                                    textDecoration: 'none',\r\n                                    color: elementsAreHovered.ProjectsPage ? colorScheme.color3 : colorScheme.color4\r\n                                }\r\n                            }\r\n                            to=\"/\"\r\n                        >\r\n                            projects\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={elementsAreHovered.ColorSchemePage ? 'selector-element pointer' : 'selector-element'}\r\n                        onMouseEnter={() => handleElementMouseEnter('ColorSchemePage')}\r\n                        onMouseLeave={() => handleElementMouseLeave()}\r\n                    >\r\n                        <Link\r\n                            style={\r\n                                {\r\n                                    textDecoration: 'none',\r\n                                    color: elementsAreHovered.ColorSchemePage ? colorScheme.color3 : colorScheme.color4\r\n                                }\r\n                            }\r\n                            to=\"/color-control\"\r\n                        >\r\n                            color control\r\n                        </Link>\r\n                    </div>      \r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div\r\n                        className={elementsAreHovered.AboutPage ? 'selector-element pointer' : 'selector-element'}\r\n                        onMouseEnter={() => handleElementMouseEnter('AboutPage')}\r\n                        onMouseLeave={() => handleElementMouseLeave()}\r\n                    >\r\n                        <Link\r\n                            style={\r\n                                {\r\n                                    textDecoration: 'none',\r\n                                    color: elementsAreHovered.AboutPage ? colorScheme.color3 : colorScheme.color4\r\n                                }\r\n                            }\r\n                            to=\"/about\"\r\n                        >\r\n                            about\r\n                        </Link>\r\n                    </div>      \r\n\r\n                    \r\n                </div>\r\n\r\n            ) :\r\n                null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderPageSelect\r\n","import ImageGallery from 'react-image-gallery';\r\nimport \"../../ProjectsPage/ProjectsPage.css\"\r\n\r\n\r\n\r\n\r\n// const images = [\r\n\r\n//     {\r\n//         original: process.env.PUBLIC_URL + '/pictures/chess/slideshow/chess_1.png',\r\n//         thumbnail: process.env.PUBLIC_URL + '/pictures/chess/slideshow/chess_1.png',\r\n//     },\r\n//     {\r\n//         original: process.env.PUBLIC_URL + '/pictures/chess/slideshow/chess_2.png',\r\n//         thumbnail: process.env.PUBLIC_URL + '/pictures/chess/slideshow/chess_2.png',\r\n//     },\r\n//     {\r\n//         original: process.env.PUBLIC_URL + '/pictures/chess/slideshow/chess_3.png',\r\n//         thumbnail: process.env.PUBLIC_URL + '/pictures/chess/slideshow/chess_3.png',\r\n//     },\r\n// ];\r\n\r\n\r\nfunction giveImagesArr(key, pictureAmount) {\r\n    let outputArr = [];\r\n    for (let i=0; i<pictureAmount; i++) {\r\n        outputArr.push({ original: process.env.PUBLIC_URL + `/pictures/${key}/slideshow/${key}_${i+1}.png`, thumbnail: process.env.PUBLIC_URL + `/pictures/${key}/slideshow/${key}_${i+1}.png`, })\r\n    }\r\n    return outputArr\r\n}\r\n\r\nconst PictureShow = ({ project }) => {\r\n    \r\n    let images = giveImagesArr(project.picKey, project.picCount);\r\n\r\n\r\n    return (\r\n        <div\r\n            id='picture-show'\r\n        >\r\n            <div>{project.picCount}{project.picKey}</div>\r\n            <ImageGallery items={images} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PictureShow\r\n","\r\nconst ProjectDetails = ({project}) => {\r\n    return (\r\n        <div\r\n            id='project-details'\r\n        >\r\n            hi i am ProjectDetails\r\n            <a href={project.tryoutLink} target=\"_blank\">try it out</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectDetails\r\n","import PageTitle from \"../PageTitle\"\r\nimport PictureShow from \"./PictureShow/PictureShow\"\r\nimport ProjectDetails from \"./ProjectDetails/ProjectDetails\"\r\n\r\n\r\nconst ProjectDetailPage = ({ project, colorScheme }) => {\r\n    return (\r\n        <div className='page'>\r\n            <PageTitle\r\n                colorScheme={colorScheme}\r\n                title='projects'\r\n                subHeader='a collection of some of my coding projects'\r\n            />\r\n            <h1>testTESTtest</h1>\r\n            <h1>testTESTtest</h1>\r\n\r\n            <h1>testTESTtest</h1>\r\n\r\n            <h1>testTESTtest</h1>\r\n\r\n            <h1>testTESTtest</h1>\r\n\r\n            <div id='detail-page-content'>\r\n                <PictureShow\r\n                    project={project}\r\n                />\r\n                \r\n                <ProjectDetails\r\n                    project={project}\r\n                />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectDetailPage\r\n","import './App.css';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nimport Header from './components/Header/Header';\r\n\r\nimport { projects } from \"./projects\"\r\nimport { colorSchemes, giveNextSchemeId } from \"./color-schemes.js\"\r\nimport AboutPage from './components/Pages/AboutPage/AboutPage';\r\nimport ProjectsPage from './components/Pages/ProjectsPage/ProjectsPage';\r\nimport ColorSchemePage from './components/Pages/ColorSchemePage/ColorSchemePage';\r\nimport HeaderPageSelect from './components/Header/Header-components/HeaderPageSelect/HeaderPageSelect';\r\nimport ProjectDetailPage from './components/Pages/ProjectDetailPage/ProjectDetailPage';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    // ACTIVE SCHEME\r\n\r\n    const [colorScheme, defineActiveColorScheme] = useState(\r\n        colorSchemes[0]\r\n    )\r\n\r\n    document.body.style.backgroundColor = colorScheme.color1;\r\n\r\n\r\n    const nextColorScheme = () => {\r\n        let nextId = giveNextSchemeId(theColorSchemes, colorScheme.schemeId);\r\n        let requestedScheme = theColorSchemes.filter(scheme => scheme.schemeId === nextId)[0];\r\n        defineActiveColorScheme(requestedScheme);\r\n    }\r\n\r\n    const setColorScheme = (id) => {\r\n        let requestedScheme = theColorSchemes.filter(scheme => scheme.schemeId === id)[0];\r\n        defineActiveColorScheme(requestedScheme);\r\n    }\r\n\r\n\r\n\r\n    // COLORSCHEMES\r\n\r\n    const [theColorSchemes, defineTheColorSchemes] = useState(colorSchemes)\r\n\r\n    const handleDefineTheColorSchemes = (newColorSchemes) => {\r\n        defineTheColorSchemes(newColorSchemes);\r\n    }\r\n\r\n    const deleteColorScheme = (id) => {\r\n        let newColorSchemes = theColorSchemes.filter(scheme => scheme.schemeId !== id);\r\n        defineTheColorSchemes(newColorSchemes);\r\n    }\r\n\r\n    const saveAndSetNewColorScheme = (newColorScheme) => {\r\n        let newTheColorSchemes = [...theColorSchemes];\r\n        newTheColorSchemes = newTheColorSchemes.filter(scheme => scheme.schemeId !== newColorScheme.schemeId);\r\n        newTheColorSchemes.push(newColorScheme);\r\n        newTheColorSchemes.sort(function (a, b) {\r\n            return a.schemeId - b.schemeId;\r\n        });\r\n        handleDefineTheColorSchemes(newTheColorSchemes);\r\n        if (colorScheme.schemeId === newColorScheme.schemeId) { defineActiveColorScheme(newColorScheme) };\r\n    }\r\n\r\n\r\n    // ACTIVEPAGE SELECT\r\n\r\n    // const [activePage, setActivePage] = useState(\r\n    //     'ProjectsPage'\r\n    // )\r\n\r\n    // const handlePageSelect = (whatPage) => {\r\n    //     setActivePage(whatPage);\r\n    // }\r\n\r\n\r\n    // SELECTOR MENU VISIBILITY\r\n\r\n    const [pageSelectorVisibility, setPageSelectorVisibility] = useState(\r\n        [false, false]\r\n    )\r\n\r\n    const handleSelectorVisibility = (visibility) => {\r\n        setPageSelectorVisibility(visibility);\r\n    }\r\n\r\n\r\n    // --------- END OF STATE ---------\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div\r\n                className=\"App\"\r\n                style={{ backgroundColor: colorScheme.color1, color: colorScheme.color4 }}\r\n            >\r\n\r\n                <HeaderPageSelect\r\n                    colorScheme={colorScheme}\r\n                    selectorVisibility={pageSelectorVisibility}\r\n                    handleSelectorVisibility={handleSelectorVisibility}\r\n                />\r\n\r\n                <Header\r\n                    colorScheme={colorScheme}\r\n                    nextColorScheme={nextColorScheme}\r\n                    selectorVisibility={pageSelectorVisibility}\r\n                    handleSelectorVisibility={handleSelectorVisibility}\r\n                />\r\n\r\n\r\n\r\n                {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\r\n                <Switch>\r\n                    <Route path=\"/about\">\r\n                        <AboutPage\r\n                            colorScheme={colorScheme}\r\n                            title={'about'}\r\n                            subHeader={'useful information about this website'}\r\n                        />\r\n                    </Route>\r\n                    <Route path=\"/color-control\">\r\n                        <ColorSchemePage\r\n                            colorScheme={colorScheme}\r\n                            title={'color control'}\r\n                            subHeader={`don't like the default color schemes? create your own here!`}\r\n                            setColorScheme={setColorScheme}\r\n                            theColorSchemes={theColorSchemes}\r\n                            deleteColorScheme={deleteColorScheme}\r\n                            handleDefineTheColorSchemes={handleDefineTheColorSchemes}\r\n                            saveAndSetNewColorScheme={saveAndSetNewColorScheme}\r\n                        />\r\n                    </Route>\r\n                    {projects.map((project) => (\r\n                        <Route path={`/${project.title}`} key={project.title}>\r\n                        <ProjectDetailPage\r\n                            project={project}\r\n                            colorScheme={colorScheme}\r\n                        />\r\n                        </Route>\r\n                    ))}\r\n                    <Route path=\"/\">\r\n                        <ProjectsPage\r\n                            colorScheme={colorScheme}\r\n                            title={'projects'}\r\n                            subHeader={'a collection of some of my coding projects'}\r\n\r\n                        />\r\n                    </Route>\r\n                </Switch>\r\n\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}